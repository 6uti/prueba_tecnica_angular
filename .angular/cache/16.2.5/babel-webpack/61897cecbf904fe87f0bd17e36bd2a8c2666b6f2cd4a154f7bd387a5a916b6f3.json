{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/material/snack-bar\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/form-field\";\nimport * as i5 from \"@angular/material/input\";\nimport * as i6 from \"@angular/material/button\";\nimport * as i7 from \"@angular/material/progress-spinner\";\nfunction LoginComponent_mat_spinner_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-spinner\", 4);\n  }\n}\nfunction LoginComponent_form_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 5);\n    i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_form_3_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.ingresar());\n    });\n    i0.ɵɵelementStart(1, \"h1\");\n    i0.ɵɵtext(2, \"Iniciar Sesion\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"mat-form-field\", 6)(4, \"mat-label\");\n    i0.ɵɵtext(5, \"Usuario\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(6, \"input\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"mat-form-field\", 6)(8, \"mat-label\");\n    i0.ɵɵtext(9, \"Contrase\\u00F1a\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(10, \"input\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(11, \"br\");\n    i0.ɵɵelementStart(12, \"button\", 9);\n    i0.ɵɵtext(13, \"Ingresar\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.form);\n    i0.ɵɵadvance(12);\n    i0.ɵɵproperty(\"disabled\", ctx_r1.form.invalid);\n  }\n}\nexport class LoginComponent {\n  constructor(fb, _snackBar) {\n    this.fb = fb;\n    this._snackBar = _snackBar;\n    this.loading = false;\n    this.form = this.fb.group({\n      usuario: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n  ngOnInit() {}\n  ingresar() {\n    console.log(this.form);\n    //this.router.navigateByUrl('/dashboard');\n    const usuario = this.form.value.usuario;\n    const password = this.form.value.password;\n    if (usuario == 'jperez' && password == 'admin123') {\n      this.fakeLoading();\n    } else {\n      this.error();\n      //this.form.reset();\n    }\n  }\n\n  error() {\n    this._snackBar.open('usuario o contraseña incorrectos', '', {\n      duration: 5000,\n      horizontalPosition: 'center',\n      verticalPosition: 'bottom'\n    });\n  }\n  fakeLoading() {\n    this.loading = true;\n    setTimeout(() => {\n      this.loading = false;\n    }, 1500);\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.MatSnackBar));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 4,\n    vars: 2,\n    consts: [[1, \"body\"], [1, \"login\"], [\"class\", \"spinner\", \"diameter\", \"50\", 4, \"ngIf\"], [3, \"formGroup\", \"ngSubmit\", 4, \"ngIf\"], [\"diameter\", \"50\", 1, \"spinner\"], [3, \"formGroup\", \"ngSubmit\"], [\"appearance\", \"fill\", 1, \"ancho\"], [\"type\", \"text\", \"matInput\", \"\", \"autocomplete\", \"off\", \"formControlName\", \"usuario\"], [\"type\", \"password\", \"matInput\", \"\", \"autocomplete\", \"off\", \"formControlName\", \"password\"], [\"type\", \"submit\", \"mat-raised-button\", \"\", \"color\", \"primary\", 1, \"ancho\", \"button\", 3, \"disabled\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵtemplate(2, LoginComponent_mat_spinner_2_Template, 1, 0, \"mat-spinner\", 2);\n        i0.ɵɵtemplate(3, LoginComponent_form_3_Template, 14, 2, \"form\", 3);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.loading);\n      }\n    },\n    dependencies: [i3.NgIf, i4.MatFormField, i4.MatLabel, i5.MatInput, i6.MatButton, i7.MatProgressSpinner, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\".body[_ngcontent-%COMP%] {\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n  \\n    background-color: #f5f5f5;\\n    height: 100%;\\n  }\\n  .login[_ngcontent-%COMP%] {\\n    width: 100%;\\n    max-width: 330px;\\n    padding: 15px;\\n    margin: auto;\\n    text-align: center;\\n  }\\n\\n  .ancho[_ngcontent-%COMP%] {\\n    width: 80%;\\n  }\\n\\n  .spinner[_ngcontent-%COMP%]{\\n    margin: 0 auto;\\n  }\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksYUFBYTtJQUNiLG1CQUFtQjtJQUNuQix1QkFBdUI7O0lBRXZCLHlCQUF5QjtJQUN6QixZQUFZO0VBQ2Q7RUFDQTtJQUNFLFdBQVc7SUFDWCxnQkFBZ0I7SUFDaEIsYUFBYTtJQUNiLFlBQVk7SUFDWixrQkFBa0I7RUFDcEI7O0VBRUE7SUFDRSxVQUFVO0VBQ1o7O0VBRUE7SUFDRSxjQUFjO0VBQ2hCIiwic291cmNlc0NvbnRlbnQiOlsiLmJvZHkge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICBcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmNWY1ZjU7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgfVxyXG4gIC5sb2dpbiB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIG1heC13aWR0aDogMzMwcHg7XHJcbiAgICBwYWRkaW5nOiAxNXB4O1xyXG4gICAgbWFyZ2luOiBhdXRvO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIH1cclxuXHJcbiAgLmFuY2hvIHtcclxuICAgIHdpZHRoOiA4MCU7XHJcbiAgfVxyXG5cclxuICAuc3Bpbm5lcntcclxuICAgIG1hcmdpbjogMCBhdXRvO1xyXG4gIH1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Validators","i0","ɵɵelement","ɵɵelementStart","ɵɵlistener","LoginComponent_form_3_Template_form_ngSubmit_0_listener","ɵɵrestoreView","_r3","ctx_r2","ɵɵnextContext","ɵɵresetView","ingresar","ɵɵtext","ɵɵelementEnd","ɵɵproperty","ctx_r1","form","ɵɵadvance","invalid","LoginComponent","constructor","fb","_snackBar","loading","group","usuario","required","password","ngOnInit","console","log","value","fakeLoading","error","open","duration","horizontalPosition","verticalPosition","setTimeout","_","ɵɵdirectiveInject","i1","FormBuilder","i2","MatSnackBar","_2","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵtemplate","LoginComponent_mat_spinner_2_Template","LoginComponent_form_3_Template"],"sources":["C:\\Users\\Jonathan\\Dropbox\\Mi PC (DESKTOP-QS2723T)\\Desktop\\prueba_angular\\reto_tecnico\\src\\app\\components\\login\\login.component.ts","C:\\Users\\Jonathan\\Dropbox\\Mi PC (DESKTOP-QS2723T)\\Desktop\\prueba_angular\\reto_tecnico\\src\\app\\components\\login\\login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  form: FormGroup;\n  loading = false;\n  \n  constructor(private fb: FormBuilder,private _snackBar: MatSnackBar) {\n    this.form = this.fb.group({\n      usuario:['',Validators.required],\n      password:['',Validators.required]\n    })\n   }\n\n  ngOnInit(): void {\n  }\n\n  ingresar() {\n    console.log(this.form);\n    //this.router.navigateByUrl('/dashboard');\n    const usuario = this.form.value.usuario; \n    const password = this.form.value.password;\n    \n    if(usuario == 'jperez' && password == 'admin123'){\n      this.fakeLoading();\n\n    }else{\n      this.error();\n      //this.form.reset();\n    }\n  }\n  error(){\n    this._snackBar.open('usuario o contraseña incorrectos','',{\n      duration:5000,\n      horizontalPosition:'center',\n      verticalPosition:'bottom'\n    })\n  }\n\n  fakeLoading(){\n    this.loading = true;\n    setTimeout(() => {\n      this.loading = false;\n    }, 1500);\n  }\n}\n","<div class=\"body\">\n    <div class=\"login\">\n        <mat-spinner *ngIf=\"loading\" class=\"spinner\" diameter=\"50\"></mat-spinner>\n        <form [formGroup]=\"form\" *ngIf=\"!loading\" (ngSubmit)=\"ingresar()\">\n            <h1>Iniciar Sesion</h1>\n            <mat-form-field class=\"ancho\" appearance=\"fill\">\n                <mat-label>Usuario</mat-label>\n                <input type=\"text\" matInput autocomplete=\"off\" formControlName=\"usuario\">\n              </mat-form-field>\n              <mat-form-field class=\"ancho\" appearance=\"fill\">\n                <mat-label>Contraseña</mat-label>\n                <input type=\"password\" matInput autocomplete=\"off\" formControlName=\"password\">\n              </mat-form-field>\n              <br>\n              <button type=\"submit\" class=\"ancho button\" mat-raised-button color=\"primary\" [disabled]=\"form.invalid\" >Ingresar</button>\n        </form>\n    </div>\n</div>\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}